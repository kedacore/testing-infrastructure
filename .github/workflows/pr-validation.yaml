name: 'Validate PR'

on:
  - pull_request_target

concurrency: terraform

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      TF_VAR_azure_location: ${{ secrets.AZURE_LOCATION }}
      TF_VAR_azure_resource_group_name: ${{ secrets.AZURE_RESOURCE_GROUP_NAME }}
      GITHUB_TOKEN: ${{ secrets.GH_PAT }}
      GITHUB_OWNER: kedacore

    steps:
    - name: Hide previous reports
      uses: int128/hide-comment-action@v1
  
    - name: Checkout
      uses: actions/checkout@v3

    - name: Checkout Pull Request
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      id: checkout
      run: |
        gh pr checkout ${{ github.event.number }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2.0.2

    - name: Setup TFLint
      uses: terraform-linters/setup-tflint@v1

    - name: Terraform Format
      id: fmt
      run: terraform fmt -recursive -check
      continue-on-error: true

    - name: Init TFLint
      run: tflint --init

    - name: Run TFLint
      run: tflint -f compact

    - name: Terraform Init
      id: init
      run: |
        terraform init \
        -backend-config=storage_account_name=${{ secrets.BACKEND_STORAGE_ACCOUNT_NAME}} \
        -backend-config=container_name=${{ secrets.BACKEND_STORAGE_CONTAINER_NAME}} \
        -backend-config=key=${{ secrets.BACKEND_STORAGE_KEY}} \
        -backend-config=resource_group_name=${{ secrets.BACKEND_STORAGE_RESOURCE_GROUP_NAME}} \
        -backend-config=subscription_id="$ARM_SUBSCRIPTION_ID" \
        -backend-config=tenant_id="$ARM_TENANT_ID" \
        -backend-config=client_id="$ARM_CLIENT_ID" \
        -backend-config=client_secret="$ARM_CLIENT_SECRET"

    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color

    - name: Terraform Plan
      id: plan
      run: terraform plan -no-color -input=false
      continue-on-error: true

    - name: Update Pull Request
      uses: actions/github-script@v6
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
          #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
          #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
          #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

          You can check the whole execution logs here: https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}

          *Pushed by: @${{ github.actor }}*`;

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })

    - name: Terraform Plan Status
      if: steps.plan.outcome == 'failure'
      run: exit 1